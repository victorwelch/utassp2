<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function loginCtrl($scope, $http, $window, $location, glideUserSession, glideSystemProperties, spUtil) {

    var c = this;
    c.remember_me = c.data.forgetMeDefault;
    if (typeof c.options.show_panel == 'undefined') {
        c.options.show_panel = true;
    }

    if (!c.data.is_logged_in && c.data.multisso_enabled && c.data.default_idp) {
        c.server.get({
            action: "set_sso_destination",
            pageURI: c.data.pageURI
        }).then(function () {
            $window.location = "/login_with_sso.do?glide_sso_id=" + c.data.default_idp;
        });
    }

    c.login = function (username, password) {

        var url = spUtil.getURL({ sysparm_type: 'view_form.login' });

        // If the page isn't public then the id in the
        // url won't match the rendered page id.
        var pageId = $location.search().id || $scope.page.id;
        var isLoginPage = $scope.portal.login_page_dv == pageId;

        return $http({
            method: 'post',
            url: url,
            data: $.param({
                'sysparm_type': 'login',
                'ni.nolog.user_password': true,
                'remember_me': !!c.remember_me ? true : false,
                'user_name': username,
                'user_password': password,
                'get_redirect_url': true,
                'sysparm_goto_url': isLoginPage ? null : $location.url()
            }),
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        }).then(function (response) {
            if (!response.data) {
                c.message = $scope.data.errorMsg;
                return;
            }

            if (response.data.status == 'success') {
                c.success = response.data.message;
                $window.location = response.data.redirect_url;
            } else {
                // wrong username or password
                c.message = response.data.message;
                c.password = "";
                c.username = "";
                angular.element("#username").focus();
            }

        }, function errorCallback(response) {
            // error
            c.message = $scope.data.errorMsg;
        });
    };

    c.externalLogin = function () {
        c.server.get({
            action: "set_sso_destination",
            pageURI: c.data.pageURI
        }).then(function () {
            glideSystemProperties.set("glide.authenticate.multisso.enabled", true);

            glideUserSession.getSsoRedirectUrlForUsername(c.username)
                .then(function (url) {
                    $window.location = url;
                }, function (err) {
                    spUtil.addErrorMessage($scope.data.errorMsg2);
                });
        });
    }

    c.setExternalLogin = function (newVal) {
        c.externalLoginMode = newVal;
    }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.set-login-type-link {&#13;
  margin-top: 10px;&#13;
  display: block;&#13;
}&#13;
&#13;
.form-control,&#13;
label[for="username"],&#13;
label[for="password"] {&#13;
	color: black;&#13;
}&#13;
&#13;
.btn {&#13;
	font-weight: 600;&#13;
  font-size: 2.0rem;&#13;
  background-color: #176AAD;&#13;
  border-color: #0B4E85;&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>utassp01_login_widget</id>
        <internal>false</internal>
        <link/>
        <name>UTASSP Login Widget</name>
        <option_schema>[{"name":"show_panel","label":"Show Panel","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {
    //We don't want to set a starting page until we've begun the login process.
    data.errorMsg = gs.getMessage("There was an error processing your request");
    data.errorMsg2 = gs.getMessage("An error has occurred - please contact your system administrator");
    data.passwordMsg = gs.getMessage("Password");
    data.usernameMsg = gs.getMessage("User name");

    var util = new GlideSPUtil();

    if (input && input.action === "set_sso_destination") {
        var gs_nav_to = gs.getSession().getProperty("nav_to");
        gs.getSession().putProperty("nav_to", null);

        if (!gs.getSession().getProperty("starting_page"))
            gs.getSession().putProperty("starting_page", gs_nav_to);

        return;
    }
    data.forgetMe = GlideProperties.getBoolean("glide.ui.forgetme");
    data.forgetMeDefault = GlideProperties.getBoolean('glide.ui.remember.me.default', true);
    data.is_logged_in = gs.getSession().isLoggedIn();
    var bypass_sso = options.bypass_sso == "true";
    data.multisso_enabled = !bypass_sso && GlideProperties.getBoolean("glide.authenticate.multisso.enabled");
    data.default_idp = GlideProperties.get("glide.authenticate.sso.redirect.idp");
    data.pageURI = util.getPageUri();
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-25 21:28:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f73092fe4f552300f006121f9310c7f6</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>UTASSP Login Widget</sys_name>
        <sys_package display_value="utassp" source="x_287765_utassp">2e58c8624f112300f006121f9310c726</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="utassp">2e58c8624f112300f006121f9310c726</sys_scope>
        <sys_update_name>sp_widget_f73092fe4f552300f006121f9310c7f6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-10-25 21:28:50</sys_updated_on>
        <template><![CDATA[<div ng-if="!data.is_logged_in">
  <form ng-if="!c.externalLoginMode" class="form-signin" ng-submit="c.login(c.username, c.password)" method="post">
		<div ng-class="{'panel panel-default': c.options.show_panel}">
			<div ng-if="c.options.show_panel" class="panel-heading">	      
				<h3 class="panel-title">${Login}</h3>
			</div>

			<div ng-class="{'panel-body': c.options.show_panel}">

				<div class="list-group list-group-sm">
					<div class="list-group-item">
            <label for="username" class="sr-only">{{::data.usernameMsg}}</label>
            <input id="username" name="username" autocapitalize="off" ng-keypress="c.message = ''" ng-click="c.message = ''" class="form-control no-border" type="text" placeholder='{{::data.usernameMsg}}' autofocus="true" ng-model="c.username"/>
					</div>
					<div class="list-group-item">
            <label for="password" class="sr-only">{{::data.passwordMsg}}</label>
            <input id="password" name="password" ng-keypress="c.message = ''" ng-click="c.message = ''" class="form-control no-border" type="password" placeholder='{{::data.passwordMsg}}' ng-model="c.password"/>
					</div>
				</div>

				<div ng-if="c.message" class="alert alert-danger" role="alert">{{c.message}}</div>
				<div ng-if="c.success" class="alert alert-success" role="alert">{{c.success}}</div>

				<div ng-if="!c.data.forgetMe" class="checkbox">
          <label>
            <input name="c.remember_me" ng-model="c.remember_me" checked="checked" id="remember_me" type="checkbox" class="checkbox" value="true"/> ${Remember me}
					</label>
				</div>

        <button name="login" type="submit" class="btn btn-lg btn-primary btn-block">
          ${Login}
        </button>

        <a ng-if="data.multisso_enabled"
           class="set-login-type-link"
           href="javascript:void(0)"
           ng-click="c.setExternalLogin(true)">${Use external login}</a>
			</div>
		</div>
	</form>
	<form ng-if="c.externalLoginMode" class="form-signin" ng-submit="c.externalLogin()" method="post">
		<div ng-class="{'panel panel-default': c.options.show_panel}">
			<div ng-if="c.options.show_panel" class="panel-heading">
				<h3 class="panel-title">${SSO Login}</h3>
			</div>

			<div ng-class="{'panel-body': c.options.show_panel}">
				<div class="list-group list-group-sm">
					<div class="list-group-item">
            <label for="username" class="sr-only">${User ID}</label>
            <input id="username" name="username" ng-click="message = ''" class="form-control no-border" type="text" placeholder='${User ID}' autofocus="true" ng-model="c.username"/>
					</div>
				</div>

        <button name="login" type="submit" class="btn btn-lg btn-primary btn-block">
          ${Submit}
        </button>

        <a href="javascript:void(0)"
           class="set-login-type-link"
           ng-click="c.setExternalLogin(false)">${Use internal login}</a> 
			</div>
		</div>
	</form>
</div>]]></template>
    </sp_widget>
</record_update>
