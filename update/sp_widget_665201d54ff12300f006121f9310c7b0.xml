<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>other</category>
        <client_script><![CDATA[function() {  /* widget controller */  var c = this;}]]></client_script>
        <controller_as>c</controller_as>
        <css>.bs-callout {
  margin: 10px 0 !important;
  padding: 20px !important;
  border-left-style: solid;
  border-left-width: 10px;
  color: $gray-dark;
}

.bs-callout-outage {
  background-color: lighten($danger, 40%);
  border-color: $danger;
}

.bs-callout-degradation {
  background-color: lighten($warning, 35%);
  border-color: $warning;
}

.bs-callout-planned {
  background-color: lighten($info, 35%);
  border-color: $info;
}

.bs-callout-success {
  background-color: lighten($success, 40%);
  border-color: $success;
}

.tooltip-inner {
    width: 150px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>utassp01_planned_maintenace_widget</id>
        <internal>false</internal>
        <link/>
        <name>UTASSP Planned Maintenance Widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function($sp, input, data, options, gs) {
// ***
// ***  Note: Within our instance of ServiceNow, we are using Cmdb_Ci Items for outage tracking;
// ***        and these do not map directly to Cmdbi_Ci_Service Services.  
// ***
// ***        Thus, we do not handle cmdb_ci Items & cmdb_ci_service Services the way "out of the box"
// ***        service portal widgets do.
// ***
// ***        However, in order to avoid introducing typographical programming errors and other
// ***        headaches into existing code/widgets some of the the code still contains the terms 
// ***        "service" where (at least for us) "item" or "configuration_item" or "cmdb_item" 
// ***        would be more appropriate.
// ***
	//
	// populate the 'data' object
	// e.g., data.table = $sp.getValue('table');
	var outage = new GlideRecord("cmdb_ci_outage");
	//
	/* *** Need the following due to Scope issues, vcw 11/14/18 *** */
	var myGlobal = new global.u_utaglobalapi();
	var myEndAfter = myGlobal.u_gs.nowNoTZ();
	var myBeginB4 = myGlobal.u_gs.daysAgoStart(-5);
	//
	outage.addQuery("begin", "<=", myBeginB4);
	outage.addQuery("end", ">=", myEndAfter);
	outage.addQuery("type", "planned");
	
	/* *** Removed the following due to Not Applicable, vcw 11/14/18 *** */
	//data.service = (input && input.service) || $sp.getParameter("service");
	//if (!gs.nil(data.service)) {
	//	outage.addQuery("cmdb_ci", data.service);
	//	var serviceGR = new GlideRecord("cmdb_ci_service");
	//	if (serviceGR.get(data.service))
	//		data.serviceDisplay = serviceGR.getDisplayValue();
	//}
	
	outage.query();
	data.outages = [];
	data.outageIDs = "";
	while (outage.next()) {
		var out = {};
		out.typeDisplay = outage.type.getDisplayValue();
		out.type = outage.getValue("type");
		out.ci = outage.cmdb_ci.getDisplayValue();
		out.begin = outage.begin.getDisplayValue();
		out.end = outage.end.getDisplayValue();
		out.serviceID = outage.getValue("cmdb_ci");
		data.outages.push(out);
		data.outageIDs += "," + outage.getUniqueValue();
	}
})($sp, input, data, options, gs);
	]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-14 20:28:19</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>665201d54ff12300f006121f9310c7b0</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>UTASSP Planned Maintenance Widget</sys_name>
        <sys_package display_value="utassp" source="x_287765_utassp">2e58c8624f112300f006121f9310c726</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="utassp">2e58c8624f112300f006121f9310c726</sys_scope>
        <sys_update_name>sp_widget_665201d54ff12300f006121f9310c7b0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-15 19:01:25</sys_updated_on>
        <template><![CDATA[<div ng-if="!data.service || data.outages.length > 0" class="panel panel-{{options.color}} b">
  <div class="panel-heading">
    <h2 class="panel-title">${Planned Maintenance}<span ng-if="data.serviceDisplay"> - {{data.serviceDisplay}}</span></h2>
  </div>

  <div class="panel-body">
	<div ng-if="!data.service">${We publish information on planned service availability below.} ${This includes events occuring over the next 5 days.}</div>

	<div ng-if="data.outages.length == 0" class="col-xs-12 bs-callout bs-callout-success">
		${No service maintenance is planned over the next 5 days}
	</div>
	<div ng-if="data.outages.length > 0" ng-repeat="outage in data.outages" class="col-xs-12 bs-callout bs-callout-{{outage.type}}">
		<a ng-if="!data.service" style="color:inherit" ng-href="?id=service_status&service={{outage.serviceID}}">${Planned maintenance} - {{outage.ci}}, ${service will be unavailable {{outage.begin}} to {{outage.end}}}</a>
		<span ng-if="data.service" style="color:inherit">${Planned maintenance} - {{outage.ci}}, ${service will be unavailable {{outage.begin}} to {{outage.end}}}</span>
	</div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
